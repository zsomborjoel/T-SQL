SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[usp_xls_rendeles_select]
AS 

DECLARE @TÖLTŐ_ELÁJÁRÁS_NEVE VARCHAR(50) = 'XLS_RENDELÉS_SELECT - tárolteljárás'
DECLARE @BETÖLTŐ_SZEMÉLY VARCHAR(50) = SUSER_SNAME()
DECLARE @LOG_KULCS VARCHAR(50) = (SELECT [NewId] FROM GetNewID)

EXEC dbo.utils_log_info @TÖLTŐ_ELÁJÁRÁS_NEVE, 'Tárolt elindult', @BETÖLTŐ_SZEMÉLY, @LOG_KULCS;

BEGIN TRY 

	INSERT INTO OPENROWSET('Microsoft.ACE.OLEDB.12.0','Excel 12.0;
	Database=C:\Attila_Projekt\Excelek\Rendelés_felület.xlsm;',
	'SELECT 
		RENDELÉS_KÓD,
		ENTITÁS_KÓD,
		MEGRENDELŐ_NEVE,
		VÁLLALATI_CIKKSZÁM,
		TERMÉK_NEVE,
		RENDELT_MENNYISÉG,
		ÁRA,
		ÚJ_ÁR_AJÁNLAT_HUF,
		ÚJ_ÁR_AJÁNLAT_EURO,
		FIZETÉS_MÓDJA,
		RENDELÉS_IDEJE,
		MEGJEGYZÉS
	FROM [RendelésLista$A1:ZZ1]')
	SELECT 
		R.RENDELÉS_KÓD,	
		E.ENTITÁS_KÓD,
		E.TELJES_NÉV AS MEGRENDELŐ_NEVE,	
		T.VÁLLALATI_CIKKSZÁM,	
		T.TERMÉK_NÉV AS TERMÉK_NEVE,	
		RENDELT_MENNYISÉG,	
		CASE 
			WHEN UPPER(ESZ.SZEGMENS_NÉV) = UPPER('KISKER') THEN SUM(TMÁ.TERMÉK_KISKERÁR_HUF * RÁ.RENDELT_MENNYISÉG)
			WHEN UPPER(ESZ.SZEGMENS_NÉV) = UPPER('NAGYKER') THEN SUM(TMÁ.TERMÉK_NAGYKERÁR_HUF * RÁ.RENDELT_MENNYISÉG)
			WHEN UPPER(ESZ.SZEGMENS_NÉV) = UPPER('SZERELŐ') THEN SUM(TMÁ.TERMÉK_SZERELŐIÁR_HUF * RÁ.RENDELT_MENNYISÉG)
		END AS ÁRA,
		RÁ.ÁR_AJÁNLAT_HUF AS ÚJ_ÁR_AJÁNLAT_HUF,	
		RÁ.ÁR_AJÁNLAT_EURO AS ÚJ_ÁR_AJÁNLAT_EURO,	
		R.FIZETÉS_MÓDJA,	
		R.RENDELÉS_IDEJE,	
		R.MEGJEGYZÉS
	FROM RENDELÉS AS R 
	JOIN RENDELÉS_ÁR_AJÁNLAT AS RÁ 
		ON R.RENDELÉS_ID=RÁ.RENDELÉS_ID
	LEFT JOIN ENTITÁS AS E 
		ON R.ENTITÁS_ID = E.ENTITÁS_ID
	LEFT JOIN ENTITÁS_SZEGMENS AS ESZ 
		ON E.ENTITÁS_SZEGMENS_ID = ESZ.ENTITÁS_SZEGMENS_ID
	LEFT JOIN TERMÉK AS T 
		ON RÁ.TERMÉK_ID = T.TERMÉK_ID
	LEFT JOIN TERMÉK_MINŐSÉG_ÁR AS TMÁ 
		ON T.TERMÉK_ID=TMÁ.TERMÉK_ID
	GROUP BY 
		RENDELÉS_KÓD,	
		ENTITÁS_KÓD,
		TELJES_NÉV,	
		VÁLLALATI_CIKKSZÁM,	
		TERMÉK_NÉV,	
		RENDELT_MENNYISÉG,
		ESZ.SZEGMENS_NÉV,
		ÁR_AJÁNLAT_HUF,	
		ÁR_AJÁNLAT_EURO,	
		FIZETÉS_MÓDJA,	
		RENDELÉS_IDEJE,	
		R.MEGJEGYZÉS
END TRY 

BEGIN CATCH
	
		-- Print error information. 
		PRINT 'Error ' + CONVERT(varchar(50), ERROR_NUMBER()) +
			  ', Severity ' + CONVERT(varchar(5), ERROR_SEVERITY()) +
			  ', State ' + CONVERT(varchar(5), ERROR_STATE()) + 
			  ', Procedure ' + ISNULL(ERROR_PROCEDURE(), '-') + 
			  ', Line ' + CONVERT(varchar(5), ERROR_LINE());
		PRINT ERROR_MESSAGE();

		DECLARE @SYS_ERROR_NUMBER varchar(50) = ERROR_NUMBER()
		DECLARE @SYS_ERROR_PROCEDURE varchar(50) = ISNULL(ERROR_PROCEDURE(), '-')
		DECLARE @SYS_ERROR_LINE varchar(50) = CONVERT(varchar(5), ERROR_LINE())
		DECLARE @SYS_ERROR_MESSAGE varchar(max) = ERROR_MESSAGE()
		
		EXEC dbo.utils_log_error @TÖLTŐ_ELÁJÁRÁS_NEVE, @SYS_ERROR_NUMBER, @SYS_ERROR_PROCEDURE, @SYS_ERROR_LINE, @SYS_ERROR_MESSAGE, @BETÖLTŐ_SZEMÉLY, @LOG_KULCS

END CATCH;

EXEC dbo.utils_log_info @TÖLTŐ_ELÁJÁRÁS_NEVE, 'Tárolt befejeződött', @BETÖLTŐ_SZEMÉLY, @LOG_KULCS;
GO
